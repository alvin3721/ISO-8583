language: cpp
sudo: required

cache:
 - apt

before_install:
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test 
  - sudo add-apt-repository -y ppa:zosrothko/poco 
#  - sudo apt-get install -qq -y g++-4.8 sloccount cppcheck
  - sudo apt-get install -qq -y libpoco-dev
  - sudo apt-get update -qq
  - sudo ldconfig  
  - export CC="gcc-4.8"
  - export CXX="g++-4.8"

#services:
#  - mongodb
  
#notifications:
#  slack: zosrothko:NTK36zinPWLjXgXUpNqB
notifications:
  slack: 
    rooms:
      - kampbell:v4ARuptk0ETzwUsKDdV6Gspb#iso-8583


env:
  global: TEST_NAME="" POCOINC=/usr/include POCOLIB=/usr/lib

before_script:
 - uname -a
 - echo ${TEST_NAME}
 - dpkg -L libpoco-dev
 - ls -l /usr/lib/*Poco*
 - g++ -O0 -g3 -dM -E - < /dev/null | sort
 - find /usr -name "*Foundation*"

matrix:
  include:
    - env:    TEST_NAME="gcc (make)"
      compiler: gcc
      script:
      - make -C cpp/make

  

    # TODO osx build
    # TODO run test suite
    #  script:
    #    - ./configure && make -s -j2
    #    - sudo ifconfig -a
    #    - sudo ifconfig venet0 multicast
    #    - sudo ifconfig -a
    #    - export POCO_BASE=`pwd`
    #    - sudo -E build/script/runtests.sh

    # QA jobs for code analytics and metrics
    # static code analysis with cppcheck (we can add --enable=all later)
 #   - env:    TEST_NAME="cppcheck"
 #     script: cppcheck --force --quiet --inline-suppr -j2 -iData/SQLite/src/sqlite3.c .
    # search for TODO within source tree
 #   - env:    TEST_NAME="TODO"
 #     script: grep -r TODO *
    # search for FIXME within source tree
 #   - env:    TEST_NAME="FIXME"
 #     script: grep -r FIXME *
    # search for HACK within source tree
 #   - env:    TEST_NAME="HACK"
 #     script: grep -r HACK *
    # some statistics about the code base
 #   - env:    TEST_NAME="sloccount"
 #     script: sloccount .
